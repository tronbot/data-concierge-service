buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1")
	}
}

apply plugin: 'org.sonarqube'
apply plugin: "groovy"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"

jar {
	baseName = "data-concierge-service"
	version = "0.0.1-SNAPSHOT"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	//compile project(":data-concierge-commons")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.cloud:spring-cloud-starter-config")
	compile("org.springframework.cloud:spring-cloud-starter-eureka")
	compile("org.springframework.cloud:spring-cloud-starter-feign")
	compile("org.springframework.cloud:spring-cloud-starter-stream-kafka")
	
	compile("org.codehaus.groovy:groovy:2.4.9")
	
	compile("com.hazelcast:hazelcast")
    compile("com.hazelcast:hazelcast-spring")
    compile("com.hazelcast:hazelcast-hibernate5:1.2")
	compile("com.zaxxer:HikariCP") {
        exclude(module: "tools")
    }
    compile("commons-beanutils:commons-beanutils:1.9.3")
    compile("com.jayway.jsonpath:json-path:2.2.0")
	compile("org.apache.commons:commons-lang3:3.5")
	compile("commons-io:commons-io:2.5")
	compile("ch.qos.logback:logback-classic:1.2.1")
    
	runtime("com.h2database:h2")
	
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE"
	}
}
